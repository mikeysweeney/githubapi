{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sween\\\\OneDrive\\\\Documents\\\\sweng\\\\SWENGAPI\\\\githubapi\\\\githubapi\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport Popup from \"reactjs-popup\";\nimport './App.css';\nimport UserForm from \"./components/UserForm\";\nimport styled from 'styled-components';\nimport Chart from './components/Charts';\nimport PieChart from './components/PieChart';\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: null,\n      id: null,\n      avatar: null,\n      followers: null,\n      repos: [],\n      languages: [],\n      chartData: [],\n      pieChartData: []\n    };\n\n    this.retrieveInfo = async e => {\n      e.preventDefault();\n      const user = e.target.elements.username.value;\n      var users = `https://api.github.com/users/${user}`;\n      var repos = `https://api.github.com/users/${user}/repos`;\n      await axios.get(users).then(res => {\n        const name = res.data.name;\n        const id = res.data.id;\n        const avatar = res.data.avatar_url;\n        const followers = res.data.followers;\n        const following = res.data.following;\n        this.setState({\n          name,\n          id,\n          avatar,\n          followers,\n          following\n        });\n      });\n      await axios.get(repos).then(res => {\n        const repos = res.data;\n        const languages = res.data;\n        this.setState({\n          repos,\n          languages\n        });\n      });\n      this.getChartData();\n      this.getPieChartData();\n    };\n  }\n\n  // chart data\n  // two data points, followers and number of people they're following \n  getChartData() {\n    const followerVal = this.state.followers;\n    const followingVal = this.state.following;\n    this.setState({\n      chartData: {\n        labels: ['Followers', 'Following'],\n        datasets: [{\n          label: '',\n          backgroundColor: ['#9999ff', '#ff99ff'],\n          data: [followerVal, followingVal, 0]\n        }]\n      }\n    });\n  } // repo link\n\n\n  renderList() {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, this.state.repos.map(repo => /*#__PURE__*/React.createElement(\"li\", {\n      key: repo.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.avatar,\n      alt: \"Profile-pic\",\n      height: \"12\",\n      width: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }), repo.name, /*#__PURE__*/React.createElement(\"a\", {\n      href: repo.html_url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 16\n      }\n    }, \"Link\"))));\n  } //get list of languages used by github user \n  //get the amount of each different language used by the github user\n\n\n  listOfLanguages() {\n    const arr = [];\n    {\n      this.state.languages.map(language => arr.push(language.language));\n    }\n    ;\n    var langsUnique = [...new Set(arr)];\n    return langsUnique;\n  }\n\n  renderLanguages() {\n    const arr = [];\n    {\n      this.state.languages.map(language => arr.push(language.language));\n    }\n    ;\n    var langsUnique = [...new Set(arr)];\n    var arrayLength = langsUnique.length;\n    const size = [];\n    {\n      this.state.languages.map(language => size.push(language.size));\n    }\n    ;\n    const subA = size.slice(0, arrayLength);\n    return subA;\n  } // pie chart data \n  // languages and proportion of that languages' use in all repos \n\n\n  getPieChartData() {\n    const labelLangs = this.listOfLanguages();\n    const dataLangs = this.renderLanguages();\n    this.setState({\n      pieChartData: {\n        labels: labelLangs,\n        datasets: [{\n          label: '',\n          backgroundColor: ['#9999ff', '#ff99ff', '#3EC7BE', '#33ccff', '#ffff66', '#00ffcc', '#ffcc66', '#99ff99', '#9900cc', '#cc66ff'],\n          data: dataLangs\n        }]\n      }\n    });\n  } // render user info and visualised data \n  // buttons and charts\n\n\n  renderInfo() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"renders\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, \" \", /*#__PURE__*/React.createElement(UserIcon, {\n      src: this.state.avatar,\n      alt: \"this.name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, this.state.name, \" | \", this.state.id), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"languages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      scrolling: \"yes\",\n      trigger: /*#__PURE__*/React.createElement(\"button\", {\n        className: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 41\n        }\n      }, \" Programming Languages \"),\n      modal: true,\n      closeOnDocumentClick: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(PieChart, {\n      pieChartData: this.state.pieChartData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 16\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      scrolling: \"yes\",\n      trigger: /*#__PURE__*/React.createElement(\"button\", {\n        className: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 41\n        }\n      }, \" Followers\"),\n      modal: true,\n      closeOnDocumentClick: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      chartData: this.state.chartData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 16\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"repos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      trigger: /*#__PURE__*/React.createElement(\"button\", {\n        className: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 26\n        }\n      }, \" Repositories \"),\n      modal: true,\n      closeOnDocumentClick: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, \"Repositories\", this.state.repos ? this.renderList() : null))));\n  } // render page layout and search bar  \n  // header, footer, searchbar\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"App-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, \"GitHub API Project\")), /*#__PURE__*/React.createElement(UserForm, {\n      retrieveInfo: this.retrieveInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }\n    }), this.state.name ? this.renderInfo() : /*#__PURE__*/React.createElement(\"p\", {\n      id: \"loading-statement\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, \"Search GitHub Username\"), /*#__PURE__*/React.createElement(\"footer\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 5\n      }\n    }, \" Michael Sweeney\")));\n  }\n\n}\n\nexport default App;\nconst UserIcon = styled('img')`\n    position: 30px 500px;\n    width: 200px;\n    height: 200px;\n    `;\n_c = UserIcon;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserIcon\");","map":{"version":3,"sources":["C:/Users/sween/OneDrive/Documents/sweng/SWENGAPI/githubapi/githubapi/src/App.js"],"names":["React","Component","axios","Popup","UserForm","styled","Chart","PieChart","App","state","name","id","avatar","followers","repos","languages","chartData","pieChartData","retrieveInfo","e","preventDefault","user","target","elements","username","value","users","get","then","res","data","avatar_url","following","setState","getChartData","getPieChartData","followerVal","followingVal","labels","datasets","label","backgroundColor","renderList","map","repo","html_url","listOfLanguages","arr","language","push","langsUnique","Set","renderLanguages","arrayLength","length","size","subA","slice","labelLangs","dataLangs","renderInfo","render","UserIcon"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\nimport Popup from \"reactjs-popup\";\nimport './App.css';\nimport UserForm from \"./components/UserForm\";\nimport styled from 'styled-components';\nimport Chart from './components/Charts';\nimport PieChart from './components/PieChart';\n\n\nclass App extends Component {\n\n  state = {\n    name: null,\n    id: null,\n    avatar: null,\n    followers: null,\n    repos: [],\n    languages: [],\n    chartData: [],\n    pieChartData:[]\n  }\n  // two variables users and repos which are the urls\n  // using axios to retrieve the data from the github api \n  // extract relevant information from api - user info, repos and languages\n\n  retrieveInfo = async (e) => {\n    e.preventDefault();\n\n    const user = e.target.elements.username.value\n    var users = `https://api.github.com/users/${user}`;\n    var repos = `https://api.github.com/users/${user}/repos`;\n    await axios.get(users)\n      .then((res) => {\n\n        const name = res.data.name;\n        const id = res.data.id;\n        const avatar = res.data.avatar_url;\n        const followers = res.data.followers;\n        const following = res.data.following;\n        this.setState({ name, id, avatar, followers, following });\n\n      })\n      await axios.get(repos)\n      .then((res) => {\n        const repos = res.data;\n        const languages = res.data;\n        this.setState({ repos , languages });\n      })\n\n      this.getChartData();\n      this.getPieChartData();\n\n  }\n  \n  // chart data\n  // two data points, followers and number of people they're following \n\n  getChartData(){\n    const followerVal = this.state.followers\n    const followingVal = this.state.following\n    this.setState({\n      chartData:{\n        labels: ['Followers' , 'Following'\n        ],\n        datasets: [{\n            label:'',\n            backgroundColor: ['#9999ff','#ff99ff'],\n            data: [followerVal , followingVal ,  0]\n        }]\n    }\n    })\n  }\n\n  // repo link\n\n  renderList() {\n    return (\n      <ul>\n        {this.state.repos.map(repo => (\n          <li  key={repo.id}>\n               {<img src={this.state.avatar} alt=\"Profile-pic\" height=\"12\" width=\"12\"></img>}\n               {repo.name}\n               <a href={repo.html_url}>Link</a>\n\n          </li>\n        ))}\n      </ul>\n    )\n  }\n\n  //get list of languages used by github user \n  //get the amount of each different language used by the github user\n\n  listOfLanguages(){\n    const arr = [];\n    {this.state.languages.map(language => (arr.push(language.language)))};\n    var langsUnique = ([...new Set(arr)]);\n\n    return(langsUnique)\n  }\n  renderLanguages(){\n    const arr = [];\n    {this.state.languages.map(language => (arr.push(language.language)))};\n    var langsUnique = ([...new Set(arr)]);\n    var arrayLength = langsUnique.length;\n    const size=[];\n    {this.state.languages.map(language => (size.push(language.size)))};\n    const subA = size.slice(0,arrayLength);\n    return(subA)\n  }\n\n\n  // pie chart data \n  // languages and proportion of that languages' use in all repos \n\n  getPieChartData(){\n    const labelLangs = this.listOfLanguages()\n    const dataLangs = this.renderLanguages()\n\n    this.setState({\n      pieChartData:{\n        labels: labelLangs,\n        datasets: [{\n            label:'',\n            backgroundColor: ['#9999ff','#ff99ff','#3EC7BE','#33ccff','#ffff66', '#00ffcc', '#ffcc66','#99ff99','#9900cc','#cc66ff'],\n            data: dataLangs\n        }]\n    }\n    })\n  }\n\n\n  // render user info and visualised data \n  // buttons and charts\n\n  renderInfo() {\n    return (\n      <div className='renders'>\n        <p> <UserIcon src={this.state.avatar} alt=\"this.name\" /></p>\n        <p>{this.state.name} | {this.state.id}</p>\n        \n        <div className='languages'>\n        <Popup scrolling=\"yes\" trigger={<button className=\"button\"> Programming Languages </button>} modal closeOnDocumentClick>\n          <div>\n          <div><PieChart pieChartData={this.state.pieChartData}/></div>\n          </div>\n        </Popup>\n        </div>\n        \n        <div className='chart'>\n        <Popup scrolling=\"yes\" trigger={<button className=\"button\"> Followers</button>} modal closeOnDocumentClick>\n          <div>\n\n          <div><Chart chartData={this.state.chartData}/></div>\n          </div>\n        </Popup>\n        </div>\n\n        <div className='repos'>\n        <Popup  trigger={<button className=\"button\"> Repositories </button>} modal closeOnDocumentClick>\n          <div>\n            Repositories\n          {this.state.repos ? this.renderList() : null}\n          </div>\n        </Popup>\n        </div>\n  </div>\n    );\n  }\n\n  // render page layout and search bar  \n  // header, footer, searchbar\n  \n  render() {\n\n    return (\n      <div className=\"App\">\n         <header className=\"App-header\">\n            <h1 className=\"App-title\">GitHub API Project</h1>\n          </header>\n        <UserForm retrieveInfo={this.retrieveInfo} />\n        {this.state.name ?\n          this.renderInfo()\n          :\n          <p id=\"loading-statement\">Search GitHub Username</p>}\n      <footer>\n\t\t\t\t<p> Michael Sweeney</p>\n\t\t\t</footer>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n\nconst UserIcon = styled('img')`\n    position: 30px 500px;\n    width: 200px;\n    height: 200px;\n    `"]},"metadata":{},"sourceType":"module"}