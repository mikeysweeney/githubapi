{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sween\\\\OneDrive\\\\Documents\\\\sweng\\\\SWENGAPI\\\\githubapi\\\\githubapi\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport Popup from \"reactjs-popup\";\nimport './App.css';\nimport UserForm from \"./components/UserForm\";\nimport styled from 'styled-components';\nimport Chart from './components/Charts';\nimport PieChart from './components/PieChart';\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: null,\n      id: null,\n      avatar: null,\n      followers: null,\n      chartData: [],\n      pieChartData: []\n    };\n\n    this.retrieveInfo = async e => {\n      e.preventDefault();\n      const user = e.target.elements.username.value;\n      var users = `https://api.github.com/users/${user}`;\n      await axios.get(users).then(res => {\n        const name = res.data.name;\n        const id = res.data.id;\n        const avatar = res.data.avatar_url;\n        const followers = res.data.followers;\n        const following = res.data.following;\n        this.setState({\n          name,\n          id,\n          avatar,\n          followers,\n          following\n        });\n      });\n      this.getChartData();\n      this.getPieChartData();\n    };\n  }\n\n  // chart data\n  // two data points, followers and number of people they're following \n  getChartData() {\n    const followerVal = this.state.followers;\n    const followingVal = this.state.following;\n    this.setState({\n      chartData: {\n        labels: ['Followers', 'Following'],\n        datasets: [{\n          label: '',\n          backgroundColor: ['#000000', '#808080'],\n          data: [followerVal, followingVal, 0]\n        }]\n      }\n    });\n  } // render user info and visualised data \n  // buttons and charts\n\n\n  renderInfo() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"renders\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \" \", /*#__PURE__*/React.createElement(UserIcon, {\n      src: this.state.avatar,\n      alt: \"this.name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, this.state.name, \" | \", this.state.id), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      scrolling: \"yes\",\n      trigger: /*#__PURE__*/React.createElement(\"button\", {\n        className: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 41\n        }\n      }, \" Followers\"),\n      modal: true,\n      closeOnDocumentClick: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      chartData: this.state.chartData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 16\n      }\n    }))))));\n  } // render page layout and search bar  \n  // header, footer, searchbar\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"App-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, \"GitHub API Project\")), /*#__PURE__*/React.createElement(UserForm, {\n      retrieveInfo: this.retrieveInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }), this.state.name ? this.renderInfo() : /*#__PURE__*/React.createElement(\"p\", {\n      id: \"loading-statement\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, \"Insert Github Username above\"));\n  }\n\n}\n\nexport default App;\nconst UserIcon = styled('img')`\n    position: 30px 500px;\n    width: 200px;\n    height: 200px;\n    `;\n_c = UserIcon;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserIcon\");","map":{"version":3,"sources":["C:/Users/sween/OneDrive/Documents/sweng/SWENGAPI/githubapi/githubapi/src/App.js"],"names":["React","Component","axios","Popup","UserForm","styled","Chart","PieChart","App","state","name","id","avatar","followers","chartData","pieChartData","retrieveInfo","e","preventDefault","user","target","elements","username","value","users","get","then","res","data","avatar_url","following","setState","getChartData","getPieChartData","followerVal","followingVal","labels","datasets","label","backgroundColor","renderInfo","render","UserIcon"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\nimport Popup from \"reactjs-popup\";\nimport './App.css';\nimport UserForm from \"./components/UserForm\";\nimport styled from 'styled-components';\nimport Chart from './components/Charts';\nimport PieChart from './components/PieChart';\n\n\nclass App extends Component {\n\n  state = {\n    name: null,\n    id: null,\n    avatar: null,\n    followers: null,\n    chartData: [],\n    pieChartData:[]\n  }\n  // variable users which are the urls\n  // retrieve the data from the github api \n  // extract relevant information from api - user info\n\n  retrieveInfo = async (e) => {\n    e.preventDefault();\n\n    const user = e.target.elements.username.value\n    var users = `https://api.github.com/users/${user}`;\n    await axios.get(users)\n      .then((res) => {\n\n        const name = res.data.name;\n        const id = res.data.id;\n        const avatar = res.data.avatar_url;\n        const followers = res.data.followers;\n        const following = res.data.following;\n        this.setState({ name, id, avatar, followers, following });\n\n      })\n\n      this.getChartData();\n      this.getPieChartData();\n\n  }\n  \n  // chart data\n  // two data points, followers and number of people they're following \n\n  getChartData(){\n    const followerVal = this.state.followers\n    const followingVal = this.state.following\n    this.setState({\n      chartData:{\n        labels: ['Followers' , 'Following'\n        ],\n        datasets: [{\n            label:'',\n            backgroundColor: ['#000000','#808080'],\n            data: [followerVal , followingVal ,  0]\n        }]\n    }\n    })\n  }\n\n  // render user info and visualised data \n  // buttons and charts\n\n  renderInfo() {\n    return (\n      <div className='renders'>\n        <p> <UserIcon src={this.state.avatar} alt=\"this.name\" /></p>\n        <p>{this.state.name} | {this.state.id}</p>\n        \n        <div className='chart'>\n        <Popup scrolling=\"yes\" trigger={<button className=\"button\"> Followers</button>} modal closeOnDocumentClick>\n          <div>\n\n          <div><Chart chartData={this.state.chartData}/></div>\n          </div>\n        </Popup>\n        </div>\n  </div>\n    );\n  }\n\n  // render page layout and search bar  \n  // header, footer, searchbar\n  \n  render() {\n\n    return (\n      <div className=\"App\">\n         <header className=\"App-header\">\n            <h1 className=\"App-title\">GitHub API Project</h1>\n          </header>\n        <UserForm retrieveInfo={this.retrieveInfo} />\n        {this.state.name ?\n          this.renderInfo()\n          :\n          <p id=\"loading-statement\">Insert Github Username above</p>}\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n\nconst UserIcon = styled('img')`\n    position: 30px 500px;\n    width: 200px;\n    height: 200px;\n    `"]},"metadata":{},"sourceType":"module"}